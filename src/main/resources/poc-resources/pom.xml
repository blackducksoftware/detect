<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 Synopsys, Inc. All rights reserved worldwide.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.synopsys.polaris</groupId>
    <artifactId>triage-service</artifactId>
    <packaging>pom</packaging>
    <version>triage-SNAPSHOT</version>
    <modules>
        <module>bom</module>
        <module>common</module>
        <module>application</module>
        <module>bootstrap</module>
        <module>integration-test</module>
        <module>web-api</module>
        <module>persistence</module>
        <module>integration-test-database</module>
    </modules>

    <name>Triage Service Aggregator</name>

    <properties>
        <dropwizard.version>2.0.34</dropwizard.version>
        <java.source.version>11</java.source.version>
        <java.target.version>11</java.target.version>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <polaris.triage-api-docs.version>2.0.16</polaris.triage-api-docs.version>
        <polaris.bootstrap.version>2.0.131</polaris.bootstrap.version>
    </properties>

    <repositories>
        <repository>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
            <id>libs-snapshots</id>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/libs-snapshots</url>
        </repository>
        <repository>
            <id>libs-releases</id>
            <name>Internal virtual repo with swip-libs-local, and remote repos such
                as Maven Central and JCenter.
            </name>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>libs-releases</id>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>

        <pluginRepository>
            <id>plugins-releases</id>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/plugins-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>

        <pluginRepository>
            <id>artifactory-plugins-snapshots</id>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/plugins-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
        <pluginRepository>
            <id>artifactory-libs-snapshots</id>
            <url>https://sig-artifactory.internal.synopsys.com/artifactory/libs-snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>deploy-to-artifactory</id>
            <distributionManagement>
                <repository>
                    <id>ngp-local</id>
                    <!--suppress UnresolvedMavenProperty -->
                    <url>${env.NGP_ARTIFACTORY_MAVEN_DEPLOY_URL}</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>deploy-to-artifactory-snapshots</id>
            <distributionManagement>
                <repository>
                    <id>ngp-snapshots</id>
                    <!--suppress UnresolvedMavenProperty -->
                    <url>${env.NGP_ARTIFACTORY_MAVEN_DEPLOY_SNAPSHOT_URL}</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.synopsys.polaris</groupId>
                <artifactId>triage-service-bom</artifactId>
                <version>triage-BOM</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.crnk</groupId>
                <artifactId>crnk-bom</artifactId>
                <version>3.3.20200920055408</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.7.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-dependencies</artifactId>
                <version>${dropwizard.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Common dependencies across submodules -->
    <dependencies>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>
        <dependency>
            <!-- Guice still needs this -->
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <!-- Common test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>${java.source.version}</source>
                        <target>${java.target.version}</target>
                        <compilerArgument>-Xlint:unchecked</compilerArgument>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.22.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.io.tmpdir>
                                ${project.build.directory}
                            </java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>3.3+</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>${java.source.version}</version>
                        </requireJavaVersion>

                        <banDuplicatePomDependencyVersions/>
                        <dependencyConvergence/>
                        <!-- TODO enable this once java11-dw2 libraries are the norm -->
                        <!--<requireUpperBoundDeps>
                            <excludes>
                                <exclude>org.slf4j:slf4j-api</exclude>
                                <exclude>org.slf4j:jcl-over-slf4j</exclude>


                                <exclude>org.assertj:assertj-core</exclude>
                                <exclude>org.javassist:javassist</exclude>
                                <exclude>org.objenesis:objenesis</exclude>
                                <exclude>net.bytebuddy:byte-buddy</exclude>
                                <exclude>net.bytebuddy:byte-buddy-agent</exclude>
                            </excludes>
                        </requireUpperBoundDeps>-->

                        <bannedDependencies>
                            <excludes>
                                <!-- Don't use the HK2 OSGi bundles for aopalliance and javax.inject; just use aopalliance:aopalliance and
                                     javax.inject:javax.inject instead. -->
                                <exclude>org.glassfish.hk2.external</exclude>

                                <!-- Don't include javax.activation -->
                                <exclude>javax.activation</exclude>
                                <exclude>javax.validation:validation-api</exclude>

                                <!-- Use slf4j -->
                                <exclude>commons-logging</exclude>
                                <exclude>log4j</exclude>

                                <!-- Part of Guice 4.0 -->
                                <exclude>com.google.inject.extensions:guice-multibindings</exclude>

                                <!-- Use org.hibernate-validator:hibernate-validator -->
                                <exclude>org.hibernate:hibernate-validator</exclude>
                            </excludes>
                        </bannedDependencies>
                    </rules>
                    <failFast>true</failFast>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnWarning>true</failOnWarning>
                    <ignoreNonCompile>true</ignoreNonCompile>
                    <ignoredUnusedDeclaredDependencies>
                        <ignoredUnusedDeclaredDependency>junit</ignoredUnusedDeclaredDependency>

                        <!-- slf4j implementations are simply dropped onto the classpath. -->
                        <ignoredUnusedDeclaredDependency>org.slf4j</ignoredUnusedDeclaredDependency>

                        <!-- non-OSGi versions -->
                        <ignoredUnusedDeclaredDependency>aopalliance:aopalliance</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>javax.inject:javax.inject</ignoredUnusedDeclaredDependency>

                        <!-- required to run on Java 9+ -->
                        <ignoredUnusedDeclaredDependency>javax.xml.bind:jaxb-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.activation:jakarta.activation-api</ignoredUnusedDeclaredDependency>

                        <!-- common dependencies that may or may not be used in a module -->
                        <ignoredUnusedDeclaredDependency>org.hibernate.validator:hibernate-validator</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.guava:guava</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.validation:jakarta.validation-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.inject:guice</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.xml.bind:jakarta.xml.bind-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.annotation:jakarta.annotation-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.inject:jakarta.inject-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.ws.rs:jakarta.ws.rs-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.code.findbugs:jsr305
                        </ignoredUnusedDeclaredDependency>

                        <!-- application dependencies -->
                        <ignoredUnusedDeclaredDependency>com.synopsys.polaris:triage-service-persistence
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.polaris:migrator
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>io.dropwizard:dropwizard-json-logging
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>io.dropwizard:dropwizard-validation
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback.contrib:logback-json-classic
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback.contrib:logback-jackson
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>org.apache.httpcomponents:httpclient
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>
                            com.synopsys.pericles:distributed-messaging-lib-transactional-outbox-postgresql
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:distributed-messaging-lib-rabbitmq</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.impossibl.pgjdbc-ng:pgjdbc-ng
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>org.postgresql:postgresql</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:rotating-db-credentials-lib-vault
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:rotating-db-credentials-lib-jdbc
                        </ignoredUnusedDeclaredDependency>

                        <!-- bootstrap images required on the classpath -->
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:cos-server-docker-bootstrap-image
                        </ignoredUnusedDeclaredDependency>
                    </ignoredUnusedDeclaredDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.41.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
                <executions>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2021 Synopsys, Inc. All rights reserved worldwide.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.synopsys.polaris</groupId>
    <artifactId>jira-service-parent</artifactId>
    <packaging>pom</packaging>
    <version>jiraservice-SNAPSHOT</version>
    <modules>
        <module>web-api</module>
        <module>service</module>
        <module>model</module>
        <module>persistence</module>
        <module>application</module>
        <module>integration-test</module>
        <module>bootstrap</module>
        <module>contract-tests</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.source.version>11</java.source.version>
        <java.target.version>11</java.target.version>
        <junit.jupiter.version>5.7.0-M1</junit.jupiter.version>
        <junit.vintage.version>5.7.0-M1</junit.vintage.version>
        <bytebuddy.version>1.12.10</bytebuddy.version>
        <mockito.version>3.4.4</mockito.version>
        <google-http-client.version>1.41.8</google-http-client.version>
        <google-oauth-client.version>1.34.0</google-oauth-client.version>
        <polaris.jira-service-api-docs.version>2.0.95</polaris.jira-service-api-docs.version>
        <polaris.polaris-jira-plugin.version>1.0.72</polaris.polaris-jira-plugin.version>
        <polaris.auth-service-docker-bootstrap-image.version>2.0.24476
        </polaris.auth-service-docker-bootstrap-image.version>
        <polaris.cos-server-docker-bootstrap-image.version>2.0.1005</polaris.cos-server-docker-bootstrap-image.version>
        <polaris.issue-manager-server-docker-bootstrap-image.version>2.0.1792
        </polaris.issue-manager-server-docker-bootstrap-image.version>
        <integration-common.version>24.3.0</integration-common.version>
        <integration-rest.version>8.0.2</integration-rest.version>
        <int-jira-common.version>2.2.4</int-jira-common.version>
        <json-smart.version>2.4.7</json-smart.version>

        <io.crnk.version>3.2.20200419165537</io.crnk.version>
        <com.bettercloud.vault-java-driver.version>5.1.0</com.bettercloud.vault-java-driver.version>
        <org.freemarker.version>2.3.30</org.freemarker.version>
        <org.glassfish.jersey.core.jersey-client.version>2.36</org.glassfish.jersey.core.jersey-client.version>
        <org.eclipse.persistence.jakarta-persistence.version>2.2.3</org.eclipse.persistence.jakarta-persistence.version>
        <io.grpc.version>1.50.2</io.grpc.version>
        <com.google.code.gson.version>2.9.0</com.google.code.gson.version>
        <guava.version>30.1.1-jre</guava.version>


<!-- AUTOMATICALLY GENERATED - DO NOT EDIT - properties - start -->
<!--
   - Copyright (c) 2022 Synopsys, Inc.  All rights reserved worldwide.
   -
   - Generated by service-manifest-generator on Tue  1 Nov 2022 16:04:45 MDT by dunfield
   - Based on manifest: 02_36830
   -          Location: http://sig-artifactory.internal.synopsys.com/artifactory/ngp-integration-manifests
   -
   - To regenerate from a different manifest:
   -    clone https://sig-gitlab.internal.synopsys.com/swip/service-manifest-generator
   - Then run the script from the project directory of the project you want to update:
   -    .../service-manifest-generator/manifest-bom-generator.sh [latest|02_36830]
   -
   -->
        <polaris.annotated-exceptions-lib.version>2.0.5</polaris.annotated-exceptions-lib.version>
        <polaris.auth-filter-lib.version>2.0.323</polaris.auth-filter-lib.version>
        <polaris.auth-service-clients.version>2.0.236</polaris.auth-service-clients.version>
        <polaris.auth-service-docker-bootstrap.version>2.0.115</polaris.auth-service-docker-bootstrap.version>
        <polaris.auth-service-tokens.version>2.0.85</polaris.auth-service-tokens.version>
        <polaris.auth-token-vendor-lib.version>2.0.290</polaris.auth-token-vendor-lib.version>
        <polaris.authorization-lib.version>2.0.87</polaris.authorization-lib.version>
        <polaris.base32-codec-lib.version>2.0.4</polaris.base32-codec-lib.version>
        <polaris.bootstrap.version>2.0.131</polaris.bootstrap.version>
        <polaris.common-object-service-clients.version>2.0.268</polaris.common-object-service-clients.version>
        <polaris.common-object-service-docker-bootstrap.version>2.0.118</polaris.common-object-service-docker-bootstrap.version>
        <polaris.containers-lib.version>2.0.84</polaris.containers-lib.version>
        <polaris.cos-core.version>2.0.734</polaris.cos-core.version>
        <polaris.distributed-messaging-lib.version>2.0.352</polaris.distributed-messaging-lib.version>
        <polaris.dropwizard-toolkit.version>2.0.84</polaris.dropwizard-toolkit.version>
        <polaris.executors-lib.version>2.0.83</polaris.executors-lib.version>
        <polaris.hash-tree-lib.version>2.0.474</polaris.hash-tree-lib.version>
        <polaris.issue-manager-clients.version>2.0.375</polaris.issue-manager-clients.version>
        <polaris.issue-manager-docker-bootstrap.version>2.0.120</polaris.issue-manager-docker-bootstrap.version>
        <polaris.jarvis-common-lib.version>2.0.86</polaris.jarvis-common-lib.version>
        <polaris.jarvis-server-lib.version>2.0.183</polaris.jarvis-server-lib.version>
        <polaris.jaxrs-client-lib.version>2.0.92</polaris.jaxrs-client-lib.version>
        <polaris.jaxrs-exception-handling-lib.version>2.0.117</polaris.jaxrs-exception-handling-lib.version>
        <polaris.keystore-lib.version>2.0.83</polaris.keystore-lib.version>
        <polaris.launchdarkly-lib.version>2.0.277</polaris.launchdarkly-lib.version>
        <polaris.liquibase-runner.version>2.0.132</polaris.liquibase-runner.version>
        <polaris.openapi-lib.version>2.0.85</polaris.openapi-lib.version>
        <polaris.pericles-corelib.version>2.0.409</polaris.pericles-corelib.version>
        <polaris.persistence-lib.version>2.0.208</polaris.persistence-lib.version>
        <polaris.polaris-be-bom.version>2.0.83</polaris.polaris-be-bom.version>
        <polaris.polaris-vault-lib.version>2.0.166</polaris.polaris-vault-lib.version>
        <polaris.readiness-liveness-lib.version>2.0.87</polaris.readiness-liveness-lib.version>
        <polaris.secret-key-lib.version>2.0.131</polaris.secret-key-lib.version>
        <polaris.swagger-assets-lib.version>2.0.85</polaris.swagger-assets-lib.version>
        <polaris.tds-lib.version>2.0.801</polaris.tds-lib.version>
        <polaris.urn-lib.version>2.0.84</polaris.urn-lib.version>
<!-- AUTOMATICALLY GENERATED - DO NOT EDIT - properties - end -->
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.source.version}</source>
                        <target>${java.target.version}</target>
                        <compilerArgs>
                            <arg>-Xlint:deprecation</arg>
                            <arg>-Xlint:unchecked</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.13</version>
                    <dependencies>
                        <dependency>
                            <groupId>javax.activation</groupId>
                            <artifactId>activation</artifactId>
                            <version>1.1.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>

        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>3.3+</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>${java.source.version}</version>
                        </requireJavaVersion>
                        <reactorModuleConvergence/>
                        <banDuplicatePomDependencyVersions/>
                        <dependencyConvergence/>
                        <requireUpperBoundDeps>
                            <excludes>
                                <exclude>org.slf4j:slf4j-api</exclude>
                                <exclude>org.slf4j:jcl-over-slf4j</exclude>
                                <exclude>org.assertj:assertj-core</exclude>
                                <exclude>com.google.guava:guava</exclude>
                            </excludes>
                        </requireUpperBoundDeps>

                        <bannedDependencies>
                            <excludes>
                                <!-- Don't use the HK2 OSGi bundles for aopalliance and jakarta.inject; just use aopalliance:aopalliance and
                                     javax.inject:javax.inject instead. -->
                                <exclude>org.glassfish.hk2.external</exclude>

                                <exclude>javax.activation</exclude>
                                <exclude>javax.validation:validation-api</exclude>

                                <!-- Use slf4j -->
                                <exclude>log4j</exclude>
                                <exclude>commons-logging</exclude>

                                <!-- Part of Guice 4.0 -->
                                <exclude>com.google.inject.extensions:guice-multibindings</exclude>
                                <exclude>org.hibernate:hibernate-validator</exclude>
                            </excludes>
                        </bannedDependencies>
                    </rules>
                    <failFast>true</failFast>
                    <fail>true</fail> <!-- You can set to false temporarily to bypass enforcer -->
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnWarning>true</failOnWarning>
                    <ignoreNonCompile>true</ignoreNonCompile>
                    <ignoredUsedUndeclaredDependencies>
                        <ignoredUsedUndeclaredDependency>org.glassfish.hk2.external:jakarta.inject</ignoredUsedUndeclaredDependency>
                    </ignoredUsedUndeclaredDependencies>
                    <ignoredUnusedDeclaredDependencies>
                        <!-- annotations doesn't use this -->
                        <ignoredUnusedDeclaredDependency>junit:junit</ignoredUnusedDeclaredDependency>

                        <!-- slf4j implementations are simply dropped onto the classpath. -->
                        <ignoredUnusedDeclaredDependency>org.slf4j</ignoredUnusedDeclaredDependency>

                        <ignoredUnusedDeclaredDependency>com.synopsys.polaris:polaris-vault-lib-client</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:distributed-messaging-lib-transactional-outbox-postgresql</ignoredUnusedDeclaredDependency>
                        <!-- non-OSGi versions -->
                        <ignoredUnusedDeclaredDependency>aopalliance:aopalliance</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>javax.inject:javax.inject</ignoredUnusedDeclaredDependency>

                        <!-- required to run on Java 9+ -->
                        <ignoredUnusedDeclaredDependency>javax.xml.bind:jaxb-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.activation:jakarta.activation-api</ignoredUnusedDeclaredDependency>

                        <!-- common deps -->
                        <ignoredUnusedDeclaredDependency>org.hibernate.validator:hibernate-validator</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.guava:guava</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.validation:jakarta.validation-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.inject:guice</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.xml.bind:jakarta.xml.bind-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.annotation:jakarta.annotation-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>jakarta.ws.rs:jakarta.ws.rs-api</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.code.findbugs:jsr305
                        </ignoredUnusedDeclaredDependency>

                        <!-- bootstrap images required on the classpath -->
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:auth-service-docker-bootstrap-image</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:cos-server-docker-bootstrap-image</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:issue-manager-server-docker-bootstrap-image</ignoredUnusedDeclaredDependency>

                        <ignoredUnusedDeclaredDependency>com.google.inject:guice</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.google.http-client:google-http-client</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>net.bytebuddy:byte-buddy</ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>net.bytebuddy:byte-buddy-agent
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>io.dropwizard:dropwizard-json-logging
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:cos-core-client
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback.contrib:logback-json-classic
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>ch.qos.logback.contrib:logback-jackson
                        </ignoredUnusedDeclaredDependency>
                        <ignoredUnusedDeclaredDependency>com.synopsys.pericles:distributed-messaging-lib-rabbitmq
                        </ignoredUnusedDeclaredDependency>

                        <!-- ignore unused norby contract dependency. Can be removed once we have contract tests -->
                        <ignoredUnusedDeclaredDependency>com.synopsys.sig.norby-contracts:playback
                        </ignoredUnusedDeclaredDependency>

                        <ignoredUnusedDeclaredDependency>io.grpc:grpc-netty-shaded</ignoredUnusedDeclaredDependency>
                    </ignoredUnusedDeclaredDependencies>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-extension</artifactId>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <id>deploy-to-artifactory</id>
            <distributionManagement>
                <repository>
                    <id>ngp-local</id>
                    <url>${env.NGP_ARTIFACTORY_MAVEN_DEPLOY_URL}</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>deploy-to-artifactory-snapshots</id>
            <distributionManagement>
                <repository>
                    <id>ngp-snapshots</id>
                    <url>${env.NGP_ARTIFACTORY_MAVEN_DEPLOY_SNAPSHOT_URL}</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>ngp-repositories-snapshots</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <id>ngp-snapshots</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/ngp-snapshot-local
                    </url>
                </repository>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>ngp-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases
                    </url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <id>ngp-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/ngp-snapshot-local
                    </url>
                </pluginRepository>
                <pluginRepository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>libs-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases
                    </url>
                </pluginRepository>
                <pluginRepository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>plugins-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/plugins-releases
                    </url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <profile>
            <id>ngp-repositories</id>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>ngp-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases
                    </url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>libs-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/libs-releases
                    </url>
                </pluginRepository>
                <pluginRepository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <id>plugins-releases</id>
                    <url>
                        https://sig-artifactory.internal.synopsys.com/artifactory/plugins-releases
                    </url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <!-- Mitigate https://sig-bd-hub.internal.synopsys.com/api/vulnerabilities/BDSA-2021-2110/overview even though
            we aren't vulnerable. -->
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${json-smart.version}</version>
            </dependency>
            <!-- Google HTTP client conflicts with BOM version of these dependencies -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.13</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.15</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>3.20.1</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${io.grpc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf-lite</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-context</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${io.grpc.version}</version>
            </dependency>
            <dependency> <!-- necessary for Java 9+ -->
                <groupId>org.apache.tomcat</groupId>
                <artifactId>annotations-api</artifactId>
                <version>6.0.53</version>
                <scope>provided</scope>
            </dependency>
            <!-- jira-service is using a different crnk version than in polaris-be-bom.
             (The newer version of crnk was adding an extra link to json responses. Hence keeping
             older version to keep responses from migrated configs-service endpoints unchanged. -->
            <dependency>
                <groupId>io.crnk</groupId>
                <artifactId>crnk-bom</artifactId>
                <version>${io.crnk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- integration-common has a transitive dependency on org.ow2.asm:asm v8.0.1 so
            we override the older version declared in polaris-be-bom here -->
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>8.0.1</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${com.google.code.gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

<!-- AUTOMATICALLY GENERATED - DO NOT EDIT - dependencies - start -->
<!--
   - Copyright (c) 2022 Synopsys, Inc.  All rights reserved worldwide.
   -
   - Generated by service-manifest-generator on Tue  1 Nov 2022 16:04:45 MDT by dunfield
   - Based on manifest: 02_36830
   -          Location: http://sig-artifactory.internal.synopsys.com/artifactory/ngp-integration-manifests
   -
   - To regenerate from a different manifest:
   -    clone https://sig-gitlab.internal.synopsys.com/swip/service-manifest-generator
   - Then run the script from the project directory of the project you want to update:
   -    .../service-manifest-generator/manifest-bom-generator.sh [latest|02_36830]
   -
   -->
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>polaris-be-bom</artifactId>
                <version>${polaris.polaris-be-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-core</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-junit</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-dropwizard</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-jdbc</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-postgres</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-rabbitmq</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>bootstrap-vault</artifactId>
                <version>${polaris.bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.polaris</groupId>
                <artifactId>polaris-vault-lib-client</artifactId>
                <version>${polaris.polaris-vault-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>polaris-vault-lib-dropwizard</artifactId>
                <version>${polaris.polaris-vault-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.polaris</groupId>
                <artifactId>polaris-vault-lib-configuration</artifactId>
                <version>${polaris.polaris-vault-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-filter-lib</artifactId>
                <version>${polaris.auth-filter-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-service-client-generated</artifactId>
                <version>${polaris.auth-service-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-service-client</artifactId>
                <version>${polaris.auth-service-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-service-integration-test-utils</artifactId>
                <version>${polaris.auth-service-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-service-tokens</artifactId>
                <version>${polaris.auth-service-tokens.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-token-vendor-lib</artifactId>
                <version>${polaris.auth-token-vendor-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>authorization-lib</artifactId>
                <version>${polaris.authorization-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>containers-lib</artifactId>
                <version>${polaris.containers-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>dropwizard-toolkit-configuration-injector</artifactId>
                <version>${polaris.dropwizard-toolkit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>executors-lib</artifactId>
                <version>${polaris.executors-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>hash-tree-lib-api</artifactId>
                <version>${polaris.hash-tree-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>hash-tree-lib-transfer-core</artifactId>
                <version>${polaris.hash-tree-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>hash-tree-lib-transfer-pericles-restful</artifactId>
                <version>${polaris.hash-tree-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.jarvis</groupId>
                <artifactId>jarvis-common-lib</artifactId>
                <version>${polaris.jarvis-common-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.jarvis</groupId>
                <artifactId>jarvis-server-lib</artifactId>
                <version>${polaris.jarvis-server-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>jaxrs-client-lib-core</artifactId>
                <version>${polaris.jaxrs-client-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>jaxrs-client-lib-jetty</artifactId>
                <version>${polaris.jaxrs-client-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>jaxrs-client-lib-legacy-service</artifactId>
                <version>${polaris.jaxrs-client-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>openapi-lib</artifactId>
                <version>${polaris.openapi-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>pericles-corelib-server</artifactId>
                <version>${polaris.pericles-corelib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>persistence-lib-jdbc</artifactId>
                <version>${polaris.persistence-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>persistence-lib-jdbc-healthcheck</artifactId>
                <version>${polaris.persistence-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>persistence-lib-jooq</artifactId>
                <version>${polaris.persistence-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>persistence-lib-test</artifactId>
                <version>${polaris.persistence-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>readiness-liveness-lib</artifactId>
                <version>${polaris.readiness-liveness-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>swagger-assets-lib</artifactId>
                <version>${polaris.swagger-assets-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>urn-lib</artifactId>
                <version>${polaris.urn-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>auth-service-docker-bootstrap</artifactId>
                <version>${polaris.auth-service-docker-bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>cos-client-generated</artifactId>
                <version>${polaris.common-object-service-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>cos-client</artifactId>
                <version>${polaris.common-object-service-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>keystore-lib</artifactId>
                <version>${polaris.keystore-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>cos-core-client</artifactId>
                <version>${polaris.cos-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>cos-server-docker-bootstrap</artifactId>
                <version>${polaris.common-object-service-docker-bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>tds-api</artifactId>
                <version>${polaris.tds-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>tds-issue-transmitter</artifactId>
                <version>${polaris.tds-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>tds-for-testing</artifactId>
                <version>${polaris.tds-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>issue-manager-client-generated</artifactId>
                <version>${polaris.issue-manager-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>issue-manager-client</artifactId>
                <version>${polaris.issue-manager-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>issue-manager-server-docker-bootstrap</artifactId>
                <version>${polaris.issue-manager-docker-bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>liquibase-runner</artifactId>
                <version>${polaris.liquibase-runner.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.polaris</groupId>
                <artifactId>launchdarkly-lib</artifactId>
                <version>${polaris.launchdarkly-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-core</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-rabbitmq-common</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-rabbitmq</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-transactional-outbox-jdbc</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-transactional-outbox-postgresql</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-guice</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>distributed-messaging-lib-junit</artifactId>
                <version>${polaris.distributed-messaging-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>secret-key-lib-guice</artifactId>
                <version>${polaris.secret-key-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>annotated-exceptions-lib</artifactId>
                <version>${polaris.annotated-exceptions-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>jaxrs-exception-handling-lib-generic</artifactId>
                <version>${polaris.jaxrs-exception-handling-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>jaxrs-exception-handling-lib-jsonapi</artifactId>
                <version>${polaris.jaxrs-exception-handling-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>base32-codec-lib</artifactId>
                <version>${polaris.base32-codec-lib.version}</version>
            </dependency>
<!-- AUTOMATICALLY GENERATED - DO NOT EDIT - dependencies - end -->
            <dependency>
                <groupId>com.synopsys.pericles</groupId>
                <artifactId>secret-key-lib-core</artifactId>
                <version>${polaris.secret-key-lib.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.validation</groupId>
                        <artifactId>validation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>net.java.dev.jna</groupId>
                        <artifactId>jna</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${bytebuddy.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>${bytebuddy.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client</artifactId>
                <version>${google-http-client.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client-gson</artifactId>
                <version>${google-http-client.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    <!-- Common dependencies across submodules -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
                <exclusion>
                    <!-- Included in Jersey -->
                    <groupId>aopalliance</groupId>
                    <artifactId>aopalliance</artifactId>
                </exclusion>
                <exclusion>
                    <!-- Duplicate classes included through dropwizard-jackson -->
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-compat-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
        </dependency>

        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
        </dependency>

        <!-- ################## -->
        <!-- Begin test dependencies -->
        <!-- ################## -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.19.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8-standalone</artifactId>
            <version>2.27.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
